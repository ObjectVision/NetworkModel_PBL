attribute<c_Time_Places>  c_FromTime_Place_rel     := ThisSet/NodeSet/c_Time_Place_rel[OrgZone_rel];
attribute<c_Time_Places>  c_ToTime_Place_rel       := ThisSet/NodeSet/c_Time_Place_rel[DstZone_rel];
attribute<Places>         From_Place_rel           := ThisSet/NodeSet/Place_rel[OrgZone_rel];
attribute<Places>         To_Place_rel             := ThisSet/NodeSet/Place_rel[DstZone_rel];
attribute<rdc>            From_Point               := ThisSet/NodeSet/geometry[OrgZone_rel];
attribute<rdc>            To_Point                 := ThisSet/NodeSet/geometry[DstZone_rel];
attribute<Stops>          From_Stop_rel            := ThisSet/NodeSet/Stop_rel[OrgZone_rel];
attribute<Stops>          To_Stop_rel              := ThisSet/NodeSet/Stop_rel[DstZone_rel];
attribute<Time>           From_Time_rel            := value(c_FromTime_Place_rel / uint64(#Places), Time);
attribute<Time>           To_Time_rel              := value(c_ToTime_Place_rel / uint64(#Places), Time);
attribute<s_f>            Traveltime               := Impedance;
attribute<Modes>          Mode_rel                 := AfgelegdeReis/DecomposeLinkSet/Mode_rel[invert(AfgelegdeReis/DecomposeLinkSet/Reis_rel)]; 
attribute<bool>           IsLastReisdeelWaiting    := AfgelegdeReis/DecomposeLinkSet/IsLastReisdeelWaiting[invert(AfgelegdeReis/DecomposeLinkSet/Reis_rel)];  //omit these OD-connections, since the ones without the 'dangling' waiting at stop is always faster and preferable. 
attribute<bool>           IsTravelToItself         := c_fromTime_Place_rel == c_ToTime_Place_rel;

container                 AfgelegdeReis            := Get_AfgelegdeReis_T(LinkSet, ., ThisSet);

