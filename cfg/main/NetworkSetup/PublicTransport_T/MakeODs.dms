unit<uint64> OD_L := 
	impedance_matrix_od64('directed;cut(OrgZone_max_imp);alternative(link_imp):alt_imp;od:impedance,OrgZone_rel,DstZone_rel,LinkSet'
		, Set_L/Set/Duration
		, Set_L/Set/F1
		, Set_L/Set/F2
		
		, convert(ModelParameters/MaxOVTime, s_f)
		, Set_L/Set/Length
	)
{
	unit<uint32>              ThisSet                  := Set_L/Set;
	#include<../OD_extra_attributen.dms>
	
	unit<uint64>              Result                   := select_with_org_rel_with_attr_by_cond(., !IsLastReisdeelWaiting && !IsTravelToItself)
	{
		attribute<Euro>             Price                       := sum(
																		AfgelegdeReis/uq_reis_route_sorted/Price
																		, AfgelegdeReis/uq_reis_route_sorted/Reis_rel
																	)[org_rel];
		attribute<Euro>             Price_augm                  := Price;
		attribute<Places>           Last_Place_rel              := ThisSet/NodeSet/Place_rel[DstZone_rel];
		
		attribute<Time>             Laatste_RO_Uitstap_Tijd     := const(null_u,.), Descr = "om te kijken of een volgende regionale rit R of O moet zijn na een K of L, moeten we de laatste uitstaptijd bijhouden";
		
		#include<../OD_uq_attributen.dms>
		#include<../OD_traveldist.dms>
	}
}
unit<uint64> OD_K := 
	impedance_matrix_od64('directed;cut(OrgZone_max_imp);alternative(link_imp):alt_imp;od:impedance,OrgZone_rel,DstZone_rel,LinkSet'
		, Set_K/Set/Duration
		, Set_K/Set/F1
		, Set_K/Set/F2
		
		, convert(ModelParameters/MaxOVTime, s_f)
		, Set_K/Set/Length
	)
{
	unit<uint32>              ThisSet := Set_K/Set;
	
	//NS-kort specifiek
	attribute<c_NS_start_end> c_NS_start_end_rel       := combine_data(c_NS_start_end, ThisSet/NodeSet/NS_Stations_rel[OrgZone_rel], ThisSet/NodeSet/NS_Stations_rel[DstZone_rel]);
	attribute<uint32>         tariefeenheden           := rjoin(c_NS_start_end_rel, TariefEenhedenMatrix/c_NS_start_end_rel, TariefEenhedenMatrix/impedance);
	attribute<bool>           IsDaadwerkelijkNSkort    := tariefeenheden < 9 && tariefeenheden > 0;
	
	#include<../OD_extra_attributen.dms>
	
	unit<uint64>              Result                   := select_with_org_rel_with_attr_by_cond(., !IsLastReisdeelWaiting && !IsTravelToItself && IsDaadwerkelijkNSkort )
	{
		attribute<Euro>             Price                                  := sum(
																							AfgelegdeReis/uq_reis_route_sorted/Price
																							, AfgelegdeReis/uq_reis_route_sorted/Reis_rel
																						)[org_rel];
		attribute<Euro>             Price_augm                               := Price;
		attribute<Time>             Laatste_RO_Uitstap_Tijd                  := const(null_u,.), Descr = "om te kijken of een volgende regionale rit R of O moet zijn na een K of L, moeten we de laatste uitstaptijd bijhouden";
		
		#include<../OD_uq_attributen.dms>
		#include<../OD_traveldist.dms>
	}
}

unit<uint64> OD_R := 
	impedance_matrix_od64('directed;cut(OrgZone_max_imp);alternative(link_imp):alt_imp;od:impedance,OrgZone_rel,DstZone_rel,LinkSet'
		, Set_R/Set/Duration
		, Set_R/Set/F1
		, Set_R/Set/F2
		
		, convert(ModelParameters/MaxOVTime, s_f)
		, Set_R/Set/Length
	)
{
	unit<uint32>                 ThisSet                          := Set_R/Set;
	
	// R specifiek
	attribute<Stops/c_Stop_Stop> c_FromStop_ToStop_rel            := combine_data(Stops/c_Stop_Stop, From_Stop_rel, To_Stop_rel);
	attribute<bool>              IsStartEndWithinSameStopCluster  := IsDefined(rlookup(c_FromStop_ToStop_rel, Stops/Find_Halte_Clusters/c_Stop_Stop_rel));
	
	#include<../OD_extra_attributen.dms>
	
	unit<uint64>              Result                   := select_with_org_rel_with_attr_by_cond(., !IsLastReisdeelWaiting && !IsTravelToItself && !IsStartEndWithinSameStopCluster)
	{
		attribute<Euro>             Price                                    := Price_R;
		attribute<Euro>             Price_augm                               := Price;
		attribute<Euro>             Price_R                                  := sum(
																							AfgelegdeReis/uq_reis_route_sorted/Price
																							, AfgelegdeReis/uq_reis_route_sorted/Reis_rel
																						)[org_rel];
		attribute<Euro>             Price_O                                  := sum(
																							AfgelegdeReis/uq_reis_route_sorted/Price_R_variabel
																							, AfgelegdeReis/uq_reis_route_sorted/Reis_rel
																						)[org_rel];
																						
		attribute<string>           Mode_str        := AsList(string(Modes/name_abr[AfgelegdeReis/VisualisatieTabel/Mode_rel]),'', AfgelegdeReis/VisualisatieTabel/Reis_rel)[org_rel];
		attribute<string>           Agency_str      := AsList(string(Agencies/name[AfgelegdeReis/VisualisatieTabel/Agency_rel]),'_', AfgelegdeReis/VisualisatieTabel/Reis_rel)[org_rel];
		
		attribute<Time>             Laatste_RO_Uitstap_Tijd                  := To_Time_rel, Descr = "om te kijken of een volgende regionale rit R of O moet zijn na een K of L, moeten we de laatste uitstaptijd bijhouden";
		
		#include<../OD_uq_attributen.dms>
		#include<../OD_traveldist.dms>
	}
}
unit<uint64> OD_O := OD_R
{
	unit<uint64> Result := OD_R/Result
	{
		attribute<Euro>             Price                                    := Price_O;
		attribute<Euro>             Price_augm                               := Price;
	}
}
