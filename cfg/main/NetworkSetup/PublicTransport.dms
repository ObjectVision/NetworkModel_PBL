unit<uint8>         Modes             := GTFS_Modes/Selectie;
unit<uint32>        Places            := PublicTransport_Prep/Impl/Places;

unit<uint64> V := ='union_unit_uint64('+AsList('TimeInvariantConnections/'+ModelParameters/Advanced/OV_Voortransport_Typen/name+'/Create_Routes/ODMatrix', ',')+')'
, Descr = "Voortransport"
{
	attribute<Places>         From_Place_rel            := ='union_data(., '+AsList('TimeInvariantConnections/'+ModelParameters/Advanced/OV_Voortransport_Typen/name+'/Create_Routes/ODMatrix/From_Place_rel', ',')+')';
	attribute<Places>         To_Place_rel              := ='union_data(., '+AsList('TimeInvariantConnections/'+ModelParameters/Advanced/OV_Voortransport_Typen/name+'/Create_Routes/ODMatrix/To_Place_rel', ',')+')';
	attribute<Modes>          Mode_rel                  := ='union_data(., '+AsList('TimeInvariantConnections/'+ModelParameters/Advanced/OV_Voortransport_Typen/name+'/Create_Routes/ODMatrix/Mode_rel', ',')+')';
	attribute<s>              impedance                 := ='union_data(., '+AsList('TimeInvariantConnections/'+ModelParameters/Advanced/OV_Voortransport_Typen/name+'/Create_Routes/ODMatrix/impedance[s]', ',')+')';
	attribute<ct>             Price                     := ='union_data(., '+AsList('TimeInvariantConnections/'+ModelParameters/Advanced/OV_Voortransport_Typen/name+'/Create_Routes/ODMatrix/Price', ',')+')';
}

unit<uint64> N := ='union_unit_uint64('+AsList('TimeInvariantConnections/'+ModelParameters/Advanced/OV_Natransport_Typen/name+'/Create_Routes/ODMatrix', ',')+')'
, Descr = "Natransport"
{
	attribute<Places>         From_Place_rel            := ='union_data(., '+AsList('TimeInvariantConnections/'+ModelParameters/Advanced/OV_Natransport_Typen/name+'/Create_Routes/ODMatrix/From_Place_rel', ',')+')';
	attribute<Places>         To_Place_rel              := ='union_data(., '+AsList('TimeInvariantConnections/'+ModelParameters/Advanced/OV_Natransport_Typen/name+'/Create_Routes/ODMatrix/To_Place_rel', ',')+')';
	attribute<Modes>          Mode_rel                  := ='union_data(., '+AsList('TimeInvariantConnections/'+ModelParameters/Advanced/OV_Natransport_Typen/name+'/Create_Routes/ODMatrix/Mode_rel', ',')+')';
	attribute<s>              impedance                 := ='union_data(., '+AsList('TimeInvariantConnections/'+ModelParameters/Advanced/OV_Natransport_Typen/name+'/Create_Routes/ODMatrix/impedance[s]', ',')+')';
	attribute<ct>             Price                     := ='union_data(., '+AsList('TimeInvariantConnections/'+ModelParameters/Advanced/OV_Natransport_Typen/name+'/Create_Routes/ODMatrix/Price', ',')+')';
}

unit<uint64> Direct_OD := =/ModelParameters/Advanced/AllowDirectCyclingOverWalking 
								? '/NetworkSetup/ConfigurationPerRegio/'+regio_name+'/PrivateTransport/Cycling/Calc_Traveltimes_maxspeed_cycling/Traveltimes'
								: '/NetworkSetup/ConfigurationPerRegio/'+regio_name+'/PrivateTransport/Walking/Calc_Traveltimes_maxspeed_walking/Traveltimes'
{
	attribute<s>       Duration_seconds                 := convert(Impedance, s);
	attribute<dam>     Distance                         := alt_imp[dam]; 
	attribute<Places>  From_Place_rel                   := rlookup(OrgZone_rel, Places/origin_rel);
	attribute<Places>  To_Place_rel                     := rlookup(DstZone_rel,  Places/dest_rel);
	attribute<ct>      Price                            := =ModelParameters/Advanced/AllowDirectCyclingOverWalking 
																? 'rounded_convert(Impedance[min_f] * ModelParameters/Direct_Cycling_Time_Costs, ct)'
																: 'rounded_convert(Impedance[min_f] * ModelParameters/Direct_Walking_Time_Costs, ct)';
}

/////===========================================================================//////

container PerVertrekmoment := 
	for_each_ne(
		Advanced/MeasureMoments/Name
		, 'PerVetrekMoment_T('+string(Advanced/MeasureMoments/Moment)+', '+quote(Advanced/MeasureMoments/name)+')'
	), using = "impl";

#include<PerVetrekMoment_T.dms>

